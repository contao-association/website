imports:
    - { resource: config.yml }

sentry:
    dsn: '%env(SENTRY_DSN)%'
    tracing:
        enabled: false
    options:
        send_default_pii: true
        environment: "%env(SENTRY_ENV)%"
        error_types: E_ALL & ~(E_NOTICE|E_STRICT|E_DEPRECATED)
        integrations:
            - 'Sentry\Integration\IgnoreErrorsIntegration'

services:
    Sentry\Integration\IgnoreErrorsIntegration:
        $options:
            ignore_exceptions:
                - Contao\CoreBundle\Exception\ForwardPageNotFoundException
                - Contao\CoreBundle\Exception\PageNotFoundException
                - Contao\CoreBundle\Exception\NoActivePageFoundException
                - Contao\CoreBundle\Exception\NoRootPageFoundException
                - Contao\CoreBundle\Exception\NoLayoutSpecifiedException
                - Contao\CoreBundle\Exception\AccessDeniedException
                - Contao\CoreBundle\Exception\InsufficientAuthenticationException
                - Contao\CoreBundle\Exception\InvalidRequestTokenException
                - Contao\CoreBundle\Exception\NoContentResponseException
                - Contao\CoreBundle\Exception\AjaxRedirectResponseException
                - Contao\CoreBundle\Exception\RedirectResponseException
                - Contao\CoreBundle\Exception\ResponseException
                - Contao\CoreBundle\Exception\ServiceUnavailableException
                - Doctrine\DBAL\Exception\ConnectionException
                - Doctrine\DBAL\Exception\DriverException
                - Symfony\Component\Console\Exception\CommandNotFoundException
                - Symfony\Component\HttpKernel\Exception\NotFoundHttpException
                - Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
                - Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException
                - Symfony\Component\HttpFoundation\Exception\BadRequestException
                - Symfony\Component\Security\Core\Exception\AccessDeniedException
